
MCP41010 + AVR.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000288  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         0000135c  00000000  00000000  000002dc  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      0000045c  00000000  00000000  00001638  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_aranges 000000a0  00000000  00000000  00001a98  2**3
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000496  00000000  00000000  00001b38  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000197  00000000  00000000  00001fce  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   0000040d  00000000  00000000  00002165  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000068  00000000  00000000  00002574  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000149  00000000  00000000  000025dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    0000003f  00000000  00000000  00002725  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
   4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
   6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
   8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
   a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
   c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
   e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
  10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
  12:	24 c0       	rjmp	.+72     	; 0x5c <__bad_interrupt>
  14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
  16:	22 c0       	rjmp	.+68     	; 0x5c <__bad_interrupt>
  18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
  1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
  1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
  1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
  20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
  22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
  24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	e8 e8       	ldi	r30, 0x88	; 136
  3a:	f2 e0       	ldi	r31, 0x02	; 2
  3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0
  42:	a0 36       	cpi	r26, 0x60	; 96
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>

00000048 <__do_clear_bss>:
  48:	10 e0       	ldi	r17, 0x00	; 0
  4a:	a0 e6       	ldi	r26, 0x60	; 96
  4c:	b0 e0       	ldi	r27, 0x00	; 0
  4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
  50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
  52:	a0 36       	cpi	r26, 0x60	; 96
  54:	b1 07       	cpc	r27, r17
  56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
  58:	02 d0       	rcall	.+4      	; 0x5e <main>
  5a:	14 c1       	rjmp	.+552    	; 0x284 <_exit>

0000005c <__bad_interrupt>:
  5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <main>:



int main(void)
{
	MCP41010_Init();
  5e:	0f d0       	rcall	.+30     	; 0x7e <MCP41010_Init>
	
    while(1)
    {
		
		//MCP41010_WriteValue(180);
			MCP41010_WriteOm(8000);
  60:	60 e0       	ldi	r22, 0x00	; 0
  62:	70 e0       	ldi	r23, 0x00	; 0
  64:	8a ef       	ldi	r24, 0xFA	; 250
  66:	95 e4       	ldi	r25, 0x45	; 69
  68:	1c d0       	rcall	.+56     	; 0xa2 <MCP41010_WriteOm>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  6a:	8f e5       	ldi	r24, 0x5F	; 95
  6c:	9a ee       	ldi	r25, 0xEA	; 234
  6e:	a0 e0       	ldi	r26, 0x00	; 0
  70:	81 50       	subi	r24, 0x01	; 1
  72:	90 40       	sbci	r25, 0x00	; 0
  74:	a0 40       	sbci	r26, 0x00	; 0
  76:	e1 f7       	brne	.-8      	; 0x70 <main+0x12>
  78:	00 c0       	rjmp	.+0      	; 0x7a <main+0x1c>
  7a:	00 00       	nop
  7c:	f1 cf       	rjmp	.-30     	; 0x60 <main+0x2>

0000007e <MCP41010_Init>:


void MCP41010_Init(void)
{
	// ініціалізація портів на вихід
	DDRB |= ((1<<PORTB2)|(1<<PORTB3)|(1<<PORTB5));
  7e:	87 b3       	in	r24, 0x17	; 23
  80:	8c 62       	ori	r24, 0x2C	; 44
  82:	87 bb       	out	0x17, r24	; 23
	PORTB |= (1<<PORTB2)|(0<<PORTB3)|(0<<PORTB5);
  84:	c2 9a       	sbi	0x18, 2	; 24
	
	// ініціалізація шини SPI  SPI mode 0-0
	SPCR|=(1<<SPE)|(1<<MSTR)|(1<<SPR1);
  86:	8d b1       	in	r24, 0x0d	; 13
  88:	82 65       	ori	r24, 0x52	; 82
  8a:	8d b9       	out	0x0d, r24	; 13
}
  8c:	08 95       	ret

0000008e <MCP41010_WriteValue>:

void MCP41010_WriteValue(unsigned char value)
{
	SPI_PORTX &= ~(1<<SPI_SS);
  8e:	c2 98       	cbi	0x18, 2	; 24
	SPDR = 0b00011001; //Ініціалізація цифрового потенціометра
  90:	99 e1       	ldi	r25, 0x19	; 25
  92:	9f b9       	out	0x0f, r25	; 15
	while(!(SPSR & (1<<SPIF)));
  94:	77 9b       	sbis	0x0e, 7	; 14
  96:	fe cf       	rjmp	.-4      	; 0x94 <MCP41010_WriteValue+0x6>
	SPDR = value;
  98:	8f b9       	out	0x0f, r24	; 15
	while(!(SPSR & (1<<SPIF)));
  9a:	77 9b       	sbis	0x0e, 7	; 14
  9c:	fe cf       	rjmp	.-4      	; 0x9a <MCP41010_WriteValue+0xc>
	SPI_PORTX |= (1<<SPI_SS);
  9e:	c2 9a       	sbi	0x18, 2	; 24
}
  a0:	08 95       	ret

000000a2 <MCP41010_WriteOm>:

MCP41010_WriteOm(float resistance)
{
	unsigned char value;
	
	value = (resistance * 0.028);
  a2:	22 e4       	ldi	r18, 0x42	; 66
  a4:	30 e6       	ldi	r19, 0x60	; 96
  a6:	45 ee       	ldi	r20, 0xE5	; 229
  a8:	5c e3       	ldi	r21, 0x3C	; 60
  aa:	61 d0       	rcall	.+194    	; 0x16e <__mulsf3>
  ac:	0b d0       	rcall	.+22     	; 0xc4 <__fixunssfsi>
	
	SPI_PORTX &= ~(1<<SPI_SS);
  ae:	c2 98       	cbi	0x18, 2	; 24
	SPDR = 0b00011001; //Ініціалізація цифрового потенціометра
  b0:	89 e1       	ldi	r24, 0x19	; 25
  b2:	8f b9       	out	0x0f, r24	; 15
	while(!(SPSR & (1<<SPIF)));
  b4:	77 9b       	sbis	0x0e, 7	; 14
  b6:	fe cf       	rjmp	.-4      	; 0xb4 <MCP41010_WriteOm+0x12>
	SPDR = ~value;
  b8:	60 95       	com	r22
  ba:	6f b9       	out	0x0f, r22	; 15
	while(!(SPSR & (1<<SPIF)));
  bc:	77 9b       	sbis	0x0e, 7	; 14
  be:	fe cf       	rjmp	.-4      	; 0xbc <MCP41010_WriteOm+0x1a>
	SPI_PORTX |= (1<<SPI_SS);
  c0:	c2 9a       	sbi	0x18, 2	; 24
	
  c2:	08 95       	ret

000000c4 <__fixunssfsi>:
  c4:	33 d0       	rcall	.+102    	; 0x12c <__fp_splitA>
  c6:	88 f0       	brcs	.+34     	; 0xea <__fixunssfsi+0x26>
  c8:	9f 57       	subi	r25, 0x7F	; 127
  ca:	90 f0       	brcs	.+36     	; 0xf0 <__fixunssfsi+0x2c>
  cc:	b9 2f       	mov	r27, r25
  ce:	99 27       	eor	r25, r25
  d0:	b7 51       	subi	r27, 0x17	; 23
  d2:	a0 f0       	brcs	.+40     	; 0xfc <__fixunssfsi+0x38>
  d4:	d1 f0       	breq	.+52     	; 0x10a <__fixunssfsi+0x46>
  d6:	66 0f       	add	r22, r22
  d8:	77 1f       	adc	r23, r23
  da:	88 1f       	adc	r24, r24
  dc:	99 1f       	adc	r25, r25
  de:	1a f0       	brmi	.+6      	; 0xe6 <__fixunssfsi+0x22>
  e0:	ba 95       	dec	r27
  e2:	c9 f7       	brne	.-14     	; 0xd6 <__fixunssfsi+0x12>
  e4:	12 c0       	rjmp	.+36     	; 0x10a <__fixunssfsi+0x46>
  e6:	b1 30       	cpi	r27, 0x01	; 1
  e8:	81 f0       	breq	.+32     	; 0x10a <__fixunssfsi+0x46>
  ea:	3a d0       	rcall	.+116    	; 0x160 <__fp_zero>
  ec:	b1 e0       	ldi	r27, 0x01	; 1
  ee:	08 95       	ret
  f0:	37 c0       	rjmp	.+110    	; 0x160 <__fp_zero>
  f2:	67 2f       	mov	r22, r23
  f4:	78 2f       	mov	r23, r24
  f6:	88 27       	eor	r24, r24
  f8:	b8 5f       	subi	r27, 0xF8	; 248
  fa:	39 f0       	breq	.+14     	; 0x10a <__fixunssfsi+0x46>
  fc:	b9 3f       	cpi	r27, 0xF9	; 249
  fe:	cc f3       	brlt	.-14     	; 0xf2 <__fixunssfsi+0x2e>
 100:	86 95       	lsr	r24
 102:	77 95       	ror	r23
 104:	67 95       	ror	r22
 106:	b3 95       	inc	r27
 108:	d9 f7       	brne	.-10     	; 0x100 <__fixunssfsi+0x3c>
 10a:	3e f4       	brtc	.+14     	; 0x11a <__fixunssfsi+0x56>
 10c:	90 95       	com	r25
 10e:	80 95       	com	r24
 110:	70 95       	com	r23
 112:	61 95       	neg	r22
 114:	7f 4f       	sbci	r23, 0xFF	; 255
 116:	8f 4f       	sbci	r24, 0xFF	; 255
 118:	9f 4f       	sbci	r25, 0xFF	; 255
 11a:	08 95       	ret

0000011c <__fp_split3>:
 11c:	57 fd       	sbrc	r21, 7
 11e:	90 58       	subi	r25, 0x80	; 128
 120:	44 0f       	add	r20, r20
 122:	55 1f       	adc	r21, r21
 124:	59 f0       	breq	.+22     	; 0x13c <__fp_splitA+0x10>
 126:	5f 3f       	cpi	r21, 0xFF	; 255
 128:	71 f0       	breq	.+28     	; 0x146 <__fp_splitA+0x1a>
 12a:	47 95       	ror	r20

0000012c <__fp_splitA>:
 12c:	88 0f       	add	r24, r24
 12e:	97 fb       	bst	r25, 7
 130:	99 1f       	adc	r25, r25
 132:	61 f0       	breq	.+24     	; 0x14c <__fp_splitA+0x20>
 134:	9f 3f       	cpi	r25, 0xFF	; 255
 136:	79 f0       	breq	.+30     	; 0x156 <__fp_splitA+0x2a>
 138:	87 95       	ror	r24
 13a:	08 95       	ret
 13c:	12 16       	cp	r1, r18
 13e:	13 06       	cpc	r1, r19
 140:	14 06       	cpc	r1, r20
 142:	55 1f       	adc	r21, r21
 144:	f2 cf       	rjmp	.-28     	; 0x12a <__fp_split3+0xe>
 146:	46 95       	lsr	r20
 148:	f1 df       	rcall	.-30     	; 0x12c <__fp_splitA>
 14a:	08 c0       	rjmp	.+16     	; 0x15c <__fp_splitA+0x30>
 14c:	16 16       	cp	r1, r22
 14e:	17 06       	cpc	r1, r23
 150:	18 06       	cpc	r1, r24
 152:	99 1f       	adc	r25, r25
 154:	f1 cf       	rjmp	.-30     	; 0x138 <__fp_splitA+0xc>
 156:	86 95       	lsr	r24
 158:	71 05       	cpc	r23, r1
 15a:	61 05       	cpc	r22, r1
 15c:	08 94       	sec
 15e:	08 95       	ret

00000160 <__fp_zero>:
 160:	e8 94       	clt

00000162 <__fp_szero>:
 162:	bb 27       	eor	r27, r27
 164:	66 27       	eor	r22, r22
 166:	77 27       	eor	r23, r23
 168:	cb 01       	movw	r24, r22
 16a:	97 f9       	bld	r25, 7
 16c:	08 95       	ret

0000016e <__mulsf3>:
 16e:	0b d0       	rcall	.+22     	; 0x186 <__mulsf3x>
 170:	78 c0       	rjmp	.+240    	; 0x262 <__fp_round>
 172:	69 d0       	rcall	.+210    	; 0x246 <__fp_pscA>
 174:	28 f0       	brcs	.+10     	; 0x180 <__mulsf3+0x12>
 176:	6e d0       	rcall	.+220    	; 0x254 <__fp_pscB>
 178:	18 f0       	brcs	.+6      	; 0x180 <__mulsf3+0x12>
 17a:	95 23       	and	r25, r21
 17c:	09 f0       	breq	.+2      	; 0x180 <__mulsf3+0x12>
 17e:	5a c0       	rjmp	.+180    	; 0x234 <__fp_inf>
 180:	5f c0       	rjmp	.+190    	; 0x240 <__fp_nan>
 182:	11 24       	eor	r1, r1
 184:	ee cf       	rjmp	.-36     	; 0x162 <__fp_szero>

00000186 <__mulsf3x>:
 186:	ca df       	rcall	.-108    	; 0x11c <__fp_split3>
 188:	a0 f3       	brcs	.-24     	; 0x172 <__mulsf3+0x4>

0000018a <__mulsf3_pse>:
 18a:	95 9f       	mul	r25, r21
 18c:	d1 f3       	breq	.-12     	; 0x182 <__mulsf3+0x14>
 18e:	95 0f       	add	r25, r21
 190:	50 e0       	ldi	r21, 0x00	; 0
 192:	55 1f       	adc	r21, r21
 194:	62 9f       	mul	r22, r18
 196:	f0 01       	movw	r30, r0
 198:	72 9f       	mul	r23, r18
 19a:	bb 27       	eor	r27, r27
 19c:	f0 0d       	add	r31, r0
 19e:	b1 1d       	adc	r27, r1
 1a0:	63 9f       	mul	r22, r19
 1a2:	aa 27       	eor	r26, r26
 1a4:	f0 0d       	add	r31, r0
 1a6:	b1 1d       	adc	r27, r1
 1a8:	aa 1f       	adc	r26, r26
 1aa:	64 9f       	mul	r22, r20
 1ac:	66 27       	eor	r22, r22
 1ae:	b0 0d       	add	r27, r0
 1b0:	a1 1d       	adc	r26, r1
 1b2:	66 1f       	adc	r22, r22
 1b4:	82 9f       	mul	r24, r18
 1b6:	22 27       	eor	r18, r18
 1b8:	b0 0d       	add	r27, r0
 1ba:	a1 1d       	adc	r26, r1
 1bc:	62 1f       	adc	r22, r18
 1be:	73 9f       	mul	r23, r19
 1c0:	b0 0d       	add	r27, r0
 1c2:	a1 1d       	adc	r26, r1
 1c4:	62 1f       	adc	r22, r18
 1c6:	83 9f       	mul	r24, r19
 1c8:	a0 0d       	add	r26, r0
 1ca:	61 1d       	adc	r22, r1
 1cc:	22 1f       	adc	r18, r18
 1ce:	74 9f       	mul	r23, r20
 1d0:	33 27       	eor	r19, r19
 1d2:	a0 0d       	add	r26, r0
 1d4:	61 1d       	adc	r22, r1
 1d6:	23 1f       	adc	r18, r19
 1d8:	84 9f       	mul	r24, r20
 1da:	60 0d       	add	r22, r0
 1dc:	21 1d       	adc	r18, r1
 1de:	82 2f       	mov	r24, r18
 1e0:	76 2f       	mov	r23, r22
 1e2:	6a 2f       	mov	r22, r26
 1e4:	11 24       	eor	r1, r1
 1e6:	9f 57       	subi	r25, 0x7F	; 127
 1e8:	50 40       	sbci	r21, 0x00	; 0
 1ea:	8a f0       	brmi	.+34     	; 0x20e <__mulsf3_pse+0x84>
 1ec:	e1 f0       	breq	.+56     	; 0x226 <__mulsf3_pse+0x9c>
 1ee:	88 23       	and	r24, r24
 1f0:	4a f0       	brmi	.+18     	; 0x204 <__mulsf3_pse+0x7a>
 1f2:	ee 0f       	add	r30, r30
 1f4:	ff 1f       	adc	r31, r31
 1f6:	bb 1f       	adc	r27, r27
 1f8:	66 1f       	adc	r22, r22
 1fa:	77 1f       	adc	r23, r23
 1fc:	88 1f       	adc	r24, r24
 1fe:	91 50       	subi	r25, 0x01	; 1
 200:	50 40       	sbci	r21, 0x00	; 0
 202:	a9 f7       	brne	.-22     	; 0x1ee <__mulsf3_pse+0x64>
 204:	9e 3f       	cpi	r25, 0xFE	; 254
 206:	51 05       	cpc	r21, r1
 208:	70 f0       	brcs	.+28     	; 0x226 <__mulsf3_pse+0x9c>
 20a:	14 c0       	rjmp	.+40     	; 0x234 <__fp_inf>
 20c:	aa cf       	rjmp	.-172    	; 0x162 <__fp_szero>
 20e:	5f 3f       	cpi	r21, 0xFF	; 255
 210:	ec f3       	brlt	.-6      	; 0x20c <__mulsf3_pse+0x82>
 212:	98 3e       	cpi	r25, 0xE8	; 232
 214:	dc f3       	brlt	.-10     	; 0x20c <__mulsf3_pse+0x82>
 216:	86 95       	lsr	r24
 218:	77 95       	ror	r23
 21a:	67 95       	ror	r22
 21c:	b7 95       	ror	r27
 21e:	f7 95       	ror	r31
 220:	e7 95       	ror	r30
 222:	9f 5f       	subi	r25, 0xFF	; 255
 224:	c1 f7       	brne	.-16     	; 0x216 <__mulsf3_pse+0x8c>
 226:	fe 2b       	or	r31, r30
 228:	88 0f       	add	r24, r24
 22a:	91 1d       	adc	r25, r1
 22c:	96 95       	lsr	r25
 22e:	87 95       	ror	r24
 230:	97 f9       	bld	r25, 7
 232:	08 95       	ret

00000234 <__fp_inf>:
 234:	97 f9       	bld	r25, 7
 236:	9f 67       	ori	r25, 0x7F	; 127
 238:	80 e8       	ldi	r24, 0x80	; 128
 23a:	70 e0       	ldi	r23, 0x00	; 0
 23c:	60 e0       	ldi	r22, 0x00	; 0
 23e:	08 95       	ret

00000240 <__fp_nan>:
 240:	9f ef       	ldi	r25, 0xFF	; 255
 242:	80 ec       	ldi	r24, 0xC0	; 192
 244:	08 95       	ret

00000246 <__fp_pscA>:
 246:	00 24       	eor	r0, r0
 248:	0a 94       	dec	r0
 24a:	16 16       	cp	r1, r22
 24c:	17 06       	cpc	r1, r23
 24e:	18 06       	cpc	r1, r24
 250:	09 06       	cpc	r0, r25
 252:	08 95       	ret

00000254 <__fp_pscB>:
 254:	00 24       	eor	r0, r0
 256:	0a 94       	dec	r0
 258:	12 16       	cp	r1, r18
 25a:	13 06       	cpc	r1, r19
 25c:	14 06       	cpc	r1, r20
 25e:	05 06       	cpc	r0, r21
 260:	08 95       	ret

00000262 <__fp_round>:
 262:	09 2e       	mov	r0, r25
 264:	03 94       	inc	r0
 266:	00 0c       	add	r0, r0
 268:	11 f4       	brne	.+4      	; 0x26e <__fp_round+0xc>
 26a:	88 23       	and	r24, r24
 26c:	52 f0       	brmi	.+20     	; 0x282 <__fp_round+0x20>
 26e:	bb 0f       	add	r27, r27
 270:	40 f4       	brcc	.+16     	; 0x282 <__fp_round+0x20>
 272:	bf 2b       	or	r27, r31
 274:	11 f4       	brne	.+4      	; 0x27a <__fp_round+0x18>
 276:	60 ff       	sbrs	r22, 0
 278:	04 c0       	rjmp	.+8      	; 0x282 <__fp_round+0x20>
 27a:	6f 5f       	subi	r22, 0xFF	; 255
 27c:	7f 4f       	sbci	r23, 0xFF	; 255
 27e:	8f 4f       	sbci	r24, 0xFF	; 255
 280:	9f 4f       	sbci	r25, 0xFF	; 255
 282:	08 95       	ret

00000284 <_exit>:
 284:	f8 94       	cli

00000286 <__stop_program>:
 286:	ff cf       	rjmp	.-2      	; 0x286 <__stop_program>
