
ATmega16_HD44760_SprintfFunc.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000832  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000e  00800060  00000832  000008a6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      0000005c  00000000  00000000  000008b4  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000078  00000000  00000000  00000910  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000862  00000000  00000000  00000988  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000030b  00000000  00000000  000011ea  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000379  00000000  00000000  000014f5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  000000e0  00000000  00000000  00001870  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000249  00000000  00000000  00001950  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000002c2  00000000  00000000  00001b99  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000058  00000000  00000000  00001e5b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 e3       	ldi	r30, 0x32	; 50
  68:	f8 e0       	ldi	r31, 0x08	; 8
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ae 36       	cpi	r26, 0x6E	; 110
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 17 04 	jmp	0x82e	; 0x82e <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
#include "main.h"

int main(void)
{
  82:	cf 93       	push	r28
  84:	df 93       	push	r29
  86:	cd b7       	in	r28, 0x3d	; 61
  88:	de b7       	in	r29, 0x3e	; 62
  8a:	a1 97       	sbiw	r28, 0x21	; 33
  8c:	0f b6       	in	r0, 0x3f	; 63
  8e:	f8 94       	cli
  90:	de bf       	out	0x3e, r29	; 62
  92:	0f be       	out	0x3f, r0	; 63
  94:	cd bf       	out	0x3d, r28	; 61
	LCD_Init();
  96:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <LCD_Init>
	LCD_Clear();
  9a:	0e 94 3b 01 	call	0x276	; 0x276 <LCD_Clear>
	LCD_gotoxy(0,0);
  9e:	60 e0       	ldi	r22, 0x00	; 0
  a0:	70 e0       	ldi	r23, 0x00	; 0
  a2:	80 e0       	ldi	r24, 0x00	; 0
  a4:	90 e0       	ldi	r25, 0x00	; 0
  a6:	0e 94 1d 01 	call	0x23a	; 0x23a <LCD_gotoxy>
	char sign;
	int i = 245;
	int j = 69;
	
	//sprintf(LCD_BUFFER,"t=%c%i.%u\xdfC",sign,temp/10,temp%10);
	sprintf (LCD_BUFFER, "%s %d %d", "one", i, j);
  aa:	1f 92       	push	r1
  ac:	85 e4       	ldi	r24, 0x45	; 69
  ae:	8f 93       	push	r24
  b0:	1f 92       	push	r1
  b2:	85 ef       	ldi	r24, 0xF5	; 245
  b4:	8f 93       	push	r24
  b6:	80 e6       	ldi	r24, 0x60	; 96
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	9f 93       	push	r25
  bc:	8f 93       	push	r24
  be:	84 e6       	ldi	r24, 0x64	; 100
  c0:	90 e0       	ldi	r25, 0x00	; 0
  c2:	9f 93       	push	r25
  c4:	8f 93       	push	r24
  c6:	8e 01       	movw	r16, r28
  c8:	0f 5f       	subi	r16, 0xFF	; 255
  ca:	1f 4f       	sbci	r17, 0xFF	; 255
  cc:	1f 93       	push	r17
  ce:	0f 93       	push	r16
  d0:	0e 94 46 01 	call	0x28c	; 0x28c <sprintf>
	
	LCD_Print(LCD_BUFFER);
  d4:	c8 01       	movw	r24, r16
  d6:	0e 94 26 01 	call	0x24c	; 0x24c <LCD_Print>
  da:	0f b6       	in	r0, 0x3f	; 63
  dc:	f8 94       	cli
  de:	de bf       	out	0x3e, r29	; 62
  e0:	0f be       	out	0x3f, r0	; 63
  e2:	cd bf       	out	0x3d, r28	; 61
	LCD_Clear();
	LCD_gotoxy(0,0);
	
	char LCD_BUFFER[33];
	char sign;
	int i = 245;
  e4:	05 ef       	ldi	r16, 0xF5	; 245
  e6:	10 e0       	ldi	r17, 0x00	; 0
		LCD_gotoxy(0,0);
		
		i++;
		j++;
		
		sprintf (LCD_BUFFER, "%s %d %d", "one", i, j);
  e8:	0f 2e       	mov	r0, r31
  ea:	f0 e6       	ldi	r31, 0x60	; 96
  ec:	af 2e       	mov	r10, r31
  ee:	f0 e0       	ldi	r31, 0x00	; 0
  f0:	bf 2e       	mov	r11, r31
  f2:	f0 2d       	mov	r31, r0
  f4:	0f 2e       	mov	r0, r31
  f6:	f4 e6       	ldi	r31, 0x64	; 100
  f8:	cf 2e       	mov	r12, r31
  fa:	f0 e0       	ldi	r31, 0x00	; 0
  fc:	df 2e       	mov	r13, r31
  fe:	f0 2d       	mov	r31, r0
 100:	ce 01       	movw	r24, r28
 102:	01 96       	adiw	r24, 0x01	; 1
 104:	7c 01       	movw	r14, r24
	LCD_Print(LCD_BUFFER);
    while(1)
    {
        
		
		LCD_gotoxy(0,0);
 106:	60 e0       	ldi	r22, 0x00	; 0
 108:	70 e0       	ldi	r23, 0x00	; 0
 10a:	80 e0       	ldi	r24, 0x00	; 0
 10c:	90 e0       	ldi	r25, 0x00	; 0
 10e:	0e 94 1d 01 	call	0x23a	; 0x23a <LCD_gotoxy>
		
		i++;
 112:	0f 5f       	subi	r16, 0xFF	; 255
 114:	1f 4f       	sbci	r17, 0xFF	; 255
 116:	c8 01       	movw	r24, r16
 118:	80 5b       	subi	r24, 0xB0	; 176
 11a:	91 09       	sbc	r25, r1
		j++;
		
		sprintf (LCD_BUFFER, "%s %d %d", "one", i, j);
 11c:	9f 93       	push	r25
 11e:	8f 93       	push	r24
 120:	1f 93       	push	r17
 122:	0f 93       	push	r16
 124:	bf 92       	push	r11
 126:	af 92       	push	r10
 128:	df 92       	push	r13
 12a:	cf 92       	push	r12
 12c:	ff 92       	push	r15
 12e:	ef 92       	push	r14
 130:	0e 94 46 01 	call	0x28c	; 0x28c <sprintf>
		LCD_Print(LCD_BUFFER);
 134:	c7 01       	movw	r24, r14
 136:	0e 94 26 01 	call	0x24c	; 0x24c <LCD_Print>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 13a:	9f ef       	ldi	r25, 0xFF	; 255
 13c:	23 ef       	ldi	r18, 0xF3	; 243
 13e:	81 e0       	ldi	r24, 0x01	; 1
 140:	91 50       	subi	r25, 0x01	; 1
 142:	20 40       	sbci	r18, 0x00	; 0
 144:	80 40       	sbci	r24, 0x00	; 0
 146:	e1 f7       	brne	.-8      	; 0x140 <main+0xbe>
 148:	00 c0       	rjmp	.+0      	; 0x14a <main+0xc8>
 14a:	00 00       	nop
 14c:	0f b6       	in	r0, 0x3f	; 63
 14e:	f8 94       	cli
 150:	de bf       	out	0x3e, r29	; 62
 152:	0f be       	out	0x3f, r0	; 63
 154:	cd bf       	out	0x3d, r28	; 61
 156:	d7 cf       	rjmp	.-82     	; 0x106 <main+0x84>

00000158 <Port_Init>:



void Port_Init(void)
{
	LCD_PORT = 0x00;
 158:	18 ba       	out	0x18, r1	; 24
	DDR_LCD_PORT = 0xFF;
 15a:	8f ef       	ldi	r24, 0xFF	; 255
 15c:	87 bb       	out	0x17, r24	; 23
 15e:	08 95       	ret

00000160 <SendHalfByte>:

}
void SendHalfByte(unsigned char c)
{
	c<<=4;
	E1; //Установка лінії Е в 1.
 160:	c3 9a       	sbi	0x18, 3	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 162:	95 e8       	ldi	r25, 0x85	; 133
 164:	9a 95       	dec	r25
 166:	f1 f7       	brne	.-4      	; 0x164 <SendHalfByte+0x4>
 168:	00 00       	nop
	_delay_us(50);
	LCD_PORT &= 0b00001111; // Зтираємо інформація на шині даних
 16a:	98 b3       	in	r25, 0x18	; 24
 16c:	9f 70       	andi	r25, 0x0F	; 15
 16e:	98 bb       	out	0x18, r25	; 24
	LCD_PORT |= c;
 170:	98 b3       	in	r25, 0x18	; 24
	

}
void SendHalfByte(unsigned char c)
{
	c<<=4;
 172:	82 95       	swap	r24
 174:	80 7f       	andi	r24, 0xF0	; 240
	E1; //Установка лінії Е в 1.
	_delay_us(50);
	LCD_PORT &= 0b00001111; // Зтираємо інформація на шині даних
	LCD_PORT |= c;
 176:	89 2b       	or	r24, r25
 178:	88 bb       	out	0x18, r24	; 24
	E0; //Установка лінії Е в 0.
 17a:	c3 98       	cbi	0x18, 3	; 24
 17c:	85 e8       	ldi	r24, 0x85	; 133
 17e:	8a 95       	dec	r24
 180:	f1 f7       	brne	.-4      	; 0x17e <SendHalfByte+0x1e>
 182:	00 00       	nop
 184:	08 95       	ret

00000186 <SendByte>:
	_delay_us(50);
}
void SendByte(unsigned char c, unsigned char mode)
{
 186:	cf 93       	push	r28
 188:	c8 2f       	mov	r28, r24
	if(mode == 0) RS0;
 18a:	61 11       	cpse	r22, r1
 18c:	02 c0       	rjmp	.+4      	; 0x192 <SendByte+0xc>
 18e:	c2 98       	cbi	0x18, 2	; 24
 190:	01 c0       	rjmp	.+2      	; 0x194 <SendByte+0xe>
	else RS1;
 192:	c2 9a       	sbi	0x18, 2	; 24
	unsigned char hc=0;
	hc = c>>4;
	SendHalfByte(hc);
 194:	8c 2f       	mov	r24, r28
 196:	82 95       	swap	r24
 198:	8f 70       	andi	r24, 0x0F	; 15
 19a:	0e 94 b0 00 	call	0x160	; 0x160 <SendHalfByte>
	SendHalfByte(c);
 19e:	8c 2f       	mov	r24, r28
 1a0:	0e 94 b0 00 	call	0x160	; 0x160 <SendHalfByte>
	
}
 1a4:	cf 91       	pop	r28
 1a6:	08 95       	ret

000001a8 <LCD_Init>:
	DDR_LCD_PORT = 0xFF;
	
}
void LCD_Init(void)
{
	Port_Init();
 1a8:	0e 94 ac 00 	call	0x158	; 0x158 <Port_Init>
	SendHalfByte(0b00000011);
 1ac:	83 e0       	ldi	r24, 0x03	; 3
 1ae:	0e 94 b0 00 	call	0x160	; 0x160 <SendHalfByte>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1b2:	8f e3       	ldi	r24, 0x3F	; 63
 1b4:	9f e1       	ldi	r25, 0x1F	; 31
 1b6:	01 97       	sbiw	r24, 0x01	; 1
 1b8:	f1 f7       	brne	.-4      	; 0x1b6 <LCD_Init+0xe>
 1ba:	00 c0       	rjmp	.+0      	; 0x1bc <LCD_Init+0x14>
 1bc:	00 00       	nop
	_delay_ms(4);
	SendHalfByte(0b00000011);
 1be:	83 e0       	ldi	r24, 0x03	; 3
 1c0:	0e 94 b0 00 	call	0x160	; 0x160 <SendHalfByte>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1c4:	87 ec       	ldi	r24, 0xC7	; 199
 1c6:	90 e0       	ldi	r25, 0x00	; 0
 1c8:	01 97       	sbiw	r24, 0x01	; 1
 1ca:	f1 f7       	brne	.-4      	; 0x1c8 <LCD_Init+0x20>
 1cc:	00 c0       	rjmp	.+0      	; 0x1ce <LCD_Init+0x26>
 1ce:	00 00       	nop
	_delay_us(100);
	SendHalfByte(0b00000011);
 1d0:	83 e0       	ldi	r24, 0x03	; 3
 1d2:	0e 94 b0 00 	call	0x160	; 0x160 <SendHalfByte>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1d6:	8f ec       	ldi	r24, 0xCF	; 207
 1d8:	97 e0       	ldi	r25, 0x07	; 7
 1da:	01 97       	sbiw	r24, 0x01	; 1
 1dc:	f1 f7       	brne	.-4      	; 0x1da <LCD_Init+0x32>
 1de:	00 c0       	rjmp	.+0      	; 0x1e0 <LCD_Init+0x38>
 1e0:	00 00       	nop
	_delay_ms(1);
	SendHalfByte(0b00000010);
 1e2:	82 e0       	ldi	r24, 0x02	; 2
 1e4:	0e 94 b0 00 	call	0x160	; 0x160 <SendHalfByte>
 1e8:	8f ec       	ldi	r24, 0xCF	; 207
 1ea:	97 e0       	ldi	r25, 0x07	; 7
 1ec:	01 97       	sbiw	r24, 0x01	; 1
 1ee:	f1 f7       	brne	.-4      	; 0x1ec <LCD_Init+0x44>
 1f0:	00 c0       	rjmp	.+0      	; 0x1f2 <LCD_Init+0x4a>
 1f2:	00 00       	nop
	_delay_ms(1);
	SendByte(0b00101000,0);// Вмикаємо 4-бітний режим (N=1)
 1f4:	60 e0       	ldi	r22, 0x00	; 0
 1f6:	88 e2       	ldi	r24, 0x28	; 40
 1f8:	0e 94 c3 00 	call	0x186	; 0x186 <SendByte>
 1fc:	8f ec       	ldi	r24, 0xCF	; 207
 1fe:	97 e0       	ldi	r25, 0x07	; 7
 200:	01 97       	sbiw	r24, 0x01	; 1
 202:	f1 f7       	brne	.-4      	; 0x200 <LCD_Init+0x58>
 204:	00 c0       	rjmp	.+0      	; 0x206 <LCD_Init+0x5e>
 206:	00 00       	nop
	_delay_ms(1);
	SendByte(0b00001100,0);//Вмикаємо зображення (D=1), курсори не вмикаємо
 208:	60 e0       	ldi	r22, 0x00	; 0
 20a:	8c e0       	ldi	r24, 0x0C	; 12
 20c:	0e 94 c3 00 	call	0x186	; 0x186 <SendByte>
 210:	8f ec       	ldi	r24, 0xCF	; 207
 212:	97 e0       	ldi	r25, 0x07	; 7
 214:	01 97       	sbiw	r24, 0x01	; 1
 216:	f1 f7       	brne	.-4      	; 0x214 <LCD_Init+0x6c>
 218:	00 c0       	rjmp	.+0      	; 0x21a <LCD_Init+0x72>
 21a:	00 00       	nop
	_delay_ms(1);
	SendByte(0b00000110,0);//Змушуємо курсор рухатись зправа на ліво.
 21c:	60 e0       	ldi	r22, 0x00	; 0
 21e:	86 e0       	ldi	r24, 0x06	; 6
 220:	0e 94 c3 00 	call	0x186	; 0x186 <SendByte>
 224:	8f ec       	ldi	r24, 0xCF	; 207
 226:	97 e0       	ldi	r25, 0x07	; 7
 228:	01 97       	sbiw	r24, 0x01	; 1
 22a:	f1 f7       	brne	.-4      	; 0x228 <LCD_Init+0x80>
 22c:	00 c0       	rjmp	.+0      	; 0x22e <LCD_Init+0x86>
 22e:	00 00       	nop
 230:	08 95       	ret

00000232 <SendChar>:
	SendHalfByte(c);
	
}
void SendChar(unsigned char c)
{
	SendByte(c,1);
 232:	61 e0       	ldi	r22, 0x01	; 1
 234:	0e 94 c3 00 	call	0x186	; 0x186 <SendByte>
 238:	08 95       	ret

0000023a <LCD_gotoxy>:
}
void LCD_gotoxy(unsigned char x, unsigned char y)
{
	char adress;
	adress = (0x40*y+x)| 0b10000000;
 23a:	90 e4       	ldi	r25, 0x40	; 64
 23c:	69 9f       	mul	r22, r25
 23e:	80 0d       	add	r24, r0
 240:	11 24       	eor	r1, r1
	SendByte(adress,0);
 242:	60 e0       	ldi	r22, 0x00	; 0
 244:	80 68       	ori	r24, 0x80	; 128
 246:	0e 94 c3 00 	call	0x186	; 0x186 <SendByte>
 24a:	08 95       	ret

0000024c <LCD_Print>:
}
void LCD_Print(char str1[])
{
 24c:	1f 93       	push	r17
 24e:	cf 93       	push	r28
 250:	df 93       	push	r29
 252:	ec 01       	movw	r28, r24
	char n;
	for(n=0; str1[n]!='\0'; n++)
 254:	88 81       	ld	r24, Y
 256:	88 23       	and	r24, r24
 258:	51 f0       	breq	.+20     	; 0x26e <LCD_Print+0x22>
 25a:	10 e0       	ldi	r17, 0x00	; 0
	SendChar(str1[n]);
 25c:	0e 94 19 01 	call	0x232	; 0x232 <SendChar>
	SendByte(adress,0);
}
void LCD_Print(char str1[])
{
	char n;
	for(n=0; str1[n]!='\0'; n++)
 260:	1f 5f       	subi	r17, 0xFF	; 255
 262:	fe 01       	movw	r30, r28
 264:	e1 0f       	add	r30, r17
 266:	f1 1d       	adc	r31, r1
 268:	80 81       	ld	r24, Z
 26a:	81 11       	cpse	r24, r1
 26c:	f7 cf       	rjmp	.-18     	; 0x25c <LCD_Print+0x10>
	SendChar(str1[n]);
	
}
 26e:	df 91       	pop	r29
 270:	cf 91       	pop	r28
 272:	1f 91       	pop	r17
 274:	08 95       	ret

00000276 <LCD_Clear>:
void LCD_Clear(void)
{
	SendByte(0b00000001,0);
 276:	60 e0       	ldi	r22, 0x00	; 0
 278:	81 e0       	ldi	r24, 0x01	; 1
 27a:	0e 94 c3 00 	call	0x186	; 0x186 <SendByte>
 27e:	8f e9       	ldi	r24, 0x9F	; 159
 280:	9f e0       	ldi	r25, 0x0F	; 15
 282:	01 97       	sbiw	r24, 0x01	; 1
 284:	f1 f7       	brne	.-4      	; 0x282 <LCD_Clear+0xc>
 286:	00 c0       	rjmp	.+0      	; 0x288 <LCD_Clear+0x12>
 288:	00 00       	nop
 28a:	08 95       	ret

0000028c <sprintf>:
 28c:	ae e0       	ldi	r26, 0x0E	; 14
 28e:	b0 e0       	ldi	r27, 0x00	; 0
 290:	ec e4       	ldi	r30, 0x4C	; 76
 292:	f1 e0       	ldi	r31, 0x01	; 1
 294:	0c 94 ee 03 	jmp	0x7dc	; 0x7dc <__prologue_saves__+0x1c>
 298:	0d 89       	ldd	r16, Y+21	; 0x15
 29a:	1e 89       	ldd	r17, Y+22	; 0x16
 29c:	86 e0       	ldi	r24, 0x06	; 6
 29e:	8c 83       	std	Y+4, r24	; 0x04
 2a0:	1a 83       	std	Y+2, r17	; 0x02
 2a2:	09 83       	std	Y+1, r16	; 0x01
 2a4:	8f ef       	ldi	r24, 0xFF	; 255
 2a6:	9f e7       	ldi	r25, 0x7F	; 127
 2a8:	9e 83       	std	Y+6, r25	; 0x06
 2aa:	8d 83       	std	Y+5, r24	; 0x05
 2ac:	ae 01       	movw	r20, r28
 2ae:	47 5e       	subi	r20, 0xE7	; 231
 2b0:	5f 4f       	sbci	r21, 0xFF	; 255
 2b2:	6f 89       	ldd	r22, Y+23	; 0x17
 2b4:	78 8d       	ldd	r23, Y+24	; 0x18
 2b6:	ce 01       	movw	r24, r28
 2b8:	01 96       	adiw	r24, 0x01	; 1
 2ba:	0e 94 68 01 	call	0x2d0	; 0x2d0 <vfprintf>
 2be:	ef 81       	ldd	r30, Y+7	; 0x07
 2c0:	f8 85       	ldd	r31, Y+8	; 0x08
 2c2:	e0 0f       	add	r30, r16
 2c4:	f1 1f       	adc	r31, r17
 2c6:	10 82       	st	Z, r1
 2c8:	2e 96       	adiw	r28, 0x0e	; 14
 2ca:	e4 e0       	ldi	r30, 0x04	; 4
 2cc:	0c 94 0a 04 	jmp	0x814	; 0x814 <__epilogue_restores__+0x1c>

000002d0 <vfprintf>:
 2d0:	ac e0       	ldi	r26, 0x0C	; 12
 2d2:	b0 e0       	ldi	r27, 0x00	; 0
 2d4:	ee e6       	ldi	r30, 0x6E	; 110
 2d6:	f1 e0       	ldi	r31, 0x01	; 1
 2d8:	0c 94 e0 03 	jmp	0x7c0	; 0x7c0 <__prologue_saves__>
 2dc:	7c 01       	movw	r14, r24
 2de:	6b 01       	movw	r12, r22
 2e0:	8a 01       	movw	r16, r20
 2e2:	fc 01       	movw	r30, r24
 2e4:	17 82       	std	Z+7, r1	; 0x07
 2e6:	16 82       	std	Z+6, r1	; 0x06
 2e8:	83 81       	ldd	r24, Z+3	; 0x03
 2ea:	81 ff       	sbrs	r24, 1
 2ec:	bd c1       	rjmp	.+890    	; 0x668 <__stack+0x209>
 2ee:	ce 01       	movw	r24, r28
 2f0:	01 96       	adiw	r24, 0x01	; 1
 2f2:	4c 01       	movw	r8, r24
 2f4:	f7 01       	movw	r30, r14
 2f6:	93 81       	ldd	r25, Z+3	; 0x03
 2f8:	f6 01       	movw	r30, r12
 2fa:	93 fd       	sbrc	r25, 3
 2fc:	85 91       	lpm	r24, Z+
 2fe:	93 ff       	sbrs	r25, 3
 300:	81 91       	ld	r24, Z+
 302:	6f 01       	movw	r12, r30
 304:	88 23       	and	r24, r24
 306:	09 f4       	brne	.+2      	; 0x30a <vfprintf+0x3a>
 308:	ab c1       	rjmp	.+854    	; 0x660 <__stack+0x201>
 30a:	85 32       	cpi	r24, 0x25	; 37
 30c:	39 f4       	brne	.+14     	; 0x31c <vfprintf+0x4c>
 30e:	93 fd       	sbrc	r25, 3
 310:	85 91       	lpm	r24, Z+
 312:	93 ff       	sbrs	r25, 3
 314:	81 91       	ld	r24, Z+
 316:	6f 01       	movw	r12, r30
 318:	85 32       	cpi	r24, 0x25	; 37
 31a:	29 f4       	brne	.+10     	; 0x326 <vfprintf+0x56>
 31c:	b7 01       	movw	r22, r14
 31e:	90 e0       	ldi	r25, 0x00	; 0
 320:	0e 94 50 03 	call	0x6a0	; 0x6a0 <fputc>
 324:	e7 cf       	rjmp	.-50     	; 0x2f4 <vfprintf+0x24>
 326:	51 2c       	mov	r5, r1
 328:	31 2c       	mov	r3, r1
 32a:	20 e0       	ldi	r18, 0x00	; 0
 32c:	20 32       	cpi	r18, 0x20	; 32
 32e:	a0 f4       	brcc	.+40     	; 0x358 <vfprintf+0x88>
 330:	8b 32       	cpi	r24, 0x2B	; 43
 332:	69 f0       	breq	.+26     	; 0x34e <vfprintf+0x7e>
 334:	30 f4       	brcc	.+12     	; 0x342 <vfprintf+0x72>
 336:	80 32       	cpi	r24, 0x20	; 32
 338:	59 f0       	breq	.+22     	; 0x350 <vfprintf+0x80>
 33a:	83 32       	cpi	r24, 0x23	; 35
 33c:	69 f4       	brne	.+26     	; 0x358 <vfprintf+0x88>
 33e:	20 61       	ori	r18, 0x10	; 16
 340:	2c c0       	rjmp	.+88     	; 0x39a <vfprintf+0xca>
 342:	8d 32       	cpi	r24, 0x2D	; 45
 344:	39 f0       	breq	.+14     	; 0x354 <vfprintf+0x84>
 346:	80 33       	cpi	r24, 0x30	; 48
 348:	39 f4       	brne	.+14     	; 0x358 <vfprintf+0x88>
 34a:	21 60       	ori	r18, 0x01	; 1
 34c:	26 c0       	rjmp	.+76     	; 0x39a <vfprintf+0xca>
 34e:	22 60       	ori	r18, 0x02	; 2
 350:	24 60       	ori	r18, 0x04	; 4
 352:	23 c0       	rjmp	.+70     	; 0x39a <vfprintf+0xca>
 354:	28 60       	ori	r18, 0x08	; 8
 356:	21 c0       	rjmp	.+66     	; 0x39a <vfprintf+0xca>
 358:	27 fd       	sbrc	r18, 7
 35a:	27 c0       	rjmp	.+78     	; 0x3aa <vfprintf+0xda>
 35c:	30 ed       	ldi	r19, 0xD0	; 208
 35e:	38 0f       	add	r19, r24
 360:	3a 30       	cpi	r19, 0x0A	; 10
 362:	78 f4       	brcc	.+30     	; 0x382 <vfprintf+0xb2>
 364:	26 ff       	sbrs	r18, 6
 366:	06 c0       	rjmp	.+12     	; 0x374 <vfprintf+0xa4>
 368:	fa e0       	ldi	r31, 0x0A	; 10
 36a:	5f 9e       	mul	r5, r31
 36c:	30 0d       	add	r19, r0
 36e:	11 24       	eor	r1, r1
 370:	53 2e       	mov	r5, r19
 372:	13 c0       	rjmp	.+38     	; 0x39a <vfprintf+0xca>
 374:	8a e0       	ldi	r24, 0x0A	; 10
 376:	38 9e       	mul	r3, r24
 378:	30 0d       	add	r19, r0
 37a:	11 24       	eor	r1, r1
 37c:	33 2e       	mov	r3, r19
 37e:	20 62       	ori	r18, 0x20	; 32
 380:	0c c0       	rjmp	.+24     	; 0x39a <vfprintf+0xca>
 382:	8e 32       	cpi	r24, 0x2E	; 46
 384:	21 f4       	brne	.+8      	; 0x38e <vfprintf+0xbe>
 386:	26 fd       	sbrc	r18, 6
 388:	6b c1       	rjmp	.+726    	; 0x660 <__stack+0x201>
 38a:	20 64       	ori	r18, 0x40	; 64
 38c:	06 c0       	rjmp	.+12     	; 0x39a <vfprintf+0xca>
 38e:	8c 36       	cpi	r24, 0x6C	; 108
 390:	11 f4       	brne	.+4      	; 0x396 <vfprintf+0xc6>
 392:	20 68       	ori	r18, 0x80	; 128
 394:	02 c0       	rjmp	.+4      	; 0x39a <vfprintf+0xca>
 396:	88 36       	cpi	r24, 0x68	; 104
 398:	41 f4       	brne	.+16     	; 0x3aa <vfprintf+0xda>
 39a:	f6 01       	movw	r30, r12
 39c:	93 fd       	sbrc	r25, 3
 39e:	85 91       	lpm	r24, Z+
 3a0:	93 ff       	sbrs	r25, 3
 3a2:	81 91       	ld	r24, Z+
 3a4:	6f 01       	movw	r12, r30
 3a6:	81 11       	cpse	r24, r1
 3a8:	c1 cf       	rjmp	.-126    	; 0x32c <vfprintf+0x5c>
 3aa:	98 2f       	mov	r25, r24
 3ac:	9f 7d       	andi	r25, 0xDF	; 223
 3ae:	95 54       	subi	r25, 0x45	; 69
 3b0:	93 30       	cpi	r25, 0x03	; 3
 3b2:	28 f4       	brcc	.+10     	; 0x3be <vfprintf+0xee>
 3b4:	0c 5f       	subi	r16, 0xFC	; 252
 3b6:	1f 4f       	sbci	r17, 0xFF	; 255
 3b8:	ff e3       	ldi	r31, 0x3F	; 63
 3ba:	f9 83       	std	Y+1, r31	; 0x01
 3bc:	0d c0       	rjmp	.+26     	; 0x3d8 <vfprintf+0x108>
 3be:	83 36       	cpi	r24, 0x63	; 99
 3c0:	31 f0       	breq	.+12     	; 0x3ce <vfprintf+0xfe>
 3c2:	83 37       	cpi	r24, 0x73	; 115
 3c4:	71 f0       	breq	.+28     	; 0x3e2 <vfprintf+0x112>
 3c6:	83 35       	cpi	r24, 0x53	; 83
 3c8:	09 f0       	breq	.+2      	; 0x3cc <vfprintf+0xfc>
 3ca:	5b c0       	rjmp	.+182    	; 0x482 <__stack+0x23>
 3cc:	22 c0       	rjmp	.+68     	; 0x412 <vfprintf+0x142>
 3ce:	f8 01       	movw	r30, r16
 3d0:	80 81       	ld	r24, Z
 3d2:	89 83       	std	Y+1, r24	; 0x01
 3d4:	0e 5f       	subi	r16, 0xFE	; 254
 3d6:	1f 4f       	sbci	r17, 0xFF	; 255
 3d8:	44 24       	eor	r4, r4
 3da:	43 94       	inc	r4
 3dc:	51 2c       	mov	r5, r1
 3de:	54 01       	movw	r10, r8
 3e0:	15 c0       	rjmp	.+42     	; 0x40c <vfprintf+0x13c>
 3e2:	38 01       	movw	r6, r16
 3e4:	f2 e0       	ldi	r31, 0x02	; 2
 3e6:	6f 0e       	add	r6, r31
 3e8:	71 1c       	adc	r7, r1
 3ea:	f8 01       	movw	r30, r16
 3ec:	a0 80       	ld	r10, Z
 3ee:	b1 80       	ldd	r11, Z+1	; 0x01
 3f0:	26 ff       	sbrs	r18, 6
 3f2:	03 c0       	rjmp	.+6      	; 0x3fa <vfprintf+0x12a>
 3f4:	65 2d       	mov	r22, r5
 3f6:	70 e0       	ldi	r23, 0x00	; 0
 3f8:	02 c0       	rjmp	.+4      	; 0x3fe <vfprintf+0x12e>
 3fa:	6f ef       	ldi	r22, 0xFF	; 255
 3fc:	7f ef       	ldi	r23, 0xFF	; 255
 3fe:	c5 01       	movw	r24, r10
 400:	2c 87       	std	Y+12, r18	; 0x0c
 402:	0e 94 45 03 	call	0x68a	; 0x68a <strnlen>
 406:	2c 01       	movw	r4, r24
 408:	83 01       	movw	r16, r6
 40a:	2c 85       	ldd	r18, Y+12	; 0x0c
 40c:	2f 77       	andi	r18, 0x7F	; 127
 40e:	22 2e       	mov	r2, r18
 410:	17 c0       	rjmp	.+46     	; 0x440 <vfprintf+0x170>
 412:	38 01       	movw	r6, r16
 414:	f2 e0       	ldi	r31, 0x02	; 2
 416:	6f 0e       	add	r6, r31
 418:	71 1c       	adc	r7, r1
 41a:	f8 01       	movw	r30, r16
 41c:	a0 80       	ld	r10, Z
 41e:	b1 80       	ldd	r11, Z+1	; 0x01
 420:	26 ff       	sbrs	r18, 6
 422:	03 c0       	rjmp	.+6      	; 0x42a <vfprintf+0x15a>
 424:	65 2d       	mov	r22, r5
 426:	70 e0       	ldi	r23, 0x00	; 0
 428:	02 c0       	rjmp	.+4      	; 0x42e <vfprintf+0x15e>
 42a:	6f ef       	ldi	r22, 0xFF	; 255
 42c:	7f ef       	ldi	r23, 0xFF	; 255
 42e:	c5 01       	movw	r24, r10
 430:	2c 87       	std	Y+12, r18	; 0x0c
 432:	0e 94 3a 03 	call	0x674	; 0x674 <strnlen_P>
 436:	2c 01       	movw	r4, r24
 438:	2c 85       	ldd	r18, Y+12	; 0x0c
 43a:	20 68       	ori	r18, 0x80	; 128
 43c:	22 2e       	mov	r2, r18
 43e:	83 01       	movw	r16, r6
 440:	23 fc       	sbrc	r2, 3
 442:	1b c0       	rjmp	.+54     	; 0x47a <__stack+0x1b>
 444:	83 2d       	mov	r24, r3
 446:	90 e0       	ldi	r25, 0x00	; 0
 448:	48 16       	cp	r4, r24
 44a:	59 06       	cpc	r5, r25
 44c:	b0 f4       	brcc	.+44     	; 0x47a <__stack+0x1b>
 44e:	b7 01       	movw	r22, r14
 450:	80 e2       	ldi	r24, 0x20	; 32
 452:	90 e0       	ldi	r25, 0x00	; 0
 454:	0e 94 50 03 	call	0x6a0	; 0x6a0 <fputc>
 458:	3a 94       	dec	r3
 45a:	f4 cf       	rjmp	.-24     	; 0x444 <vfprintf+0x174>
 45c:	f5 01       	movw	r30, r10
 45e:	27 fc       	sbrc	r2, 7
 460:	85 91       	lpm	r24, Z+
 462:	27 fe       	sbrs	r2, 7
 464:	81 91       	ld	r24, Z+
 466:	5f 01       	movw	r10, r30
 468:	b7 01       	movw	r22, r14
 46a:	90 e0       	ldi	r25, 0x00	; 0
 46c:	0e 94 50 03 	call	0x6a0	; 0x6a0 <fputc>
 470:	31 10       	cpse	r3, r1
 472:	3a 94       	dec	r3
 474:	f1 e0       	ldi	r31, 0x01	; 1
 476:	4f 1a       	sub	r4, r31
 478:	51 08       	sbc	r5, r1
 47a:	41 14       	cp	r4, r1
 47c:	51 04       	cpc	r5, r1
 47e:	71 f7       	brne	.-36     	; 0x45c <vfprintf+0x18c>
 480:	e5 c0       	rjmp	.+458    	; 0x64c <__stack+0x1ed>
 482:	84 36       	cpi	r24, 0x64	; 100
 484:	11 f0       	breq	.+4      	; 0x48a <__stack+0x2b>
 486:	89 36       	cpi	r24, 0x69	; 105
 488:	39 f5       	brne	.+78     	; 0x4d8 <__stack+0x79>
 48a:	f8 01       	movw	r30, r16
 48c:	27 ff       	sbrs	r18, 7
 48e:	07 c0       	rjmp	.+14     	; 0x49e <__stack+0x3f>
 490:	60 81       	ld	r22, Z
 492:	71 81       	ldd	r23, Z+1	; 0x01
 494:	82 81       	ldd	r24, Z+2	; 0x02
 496:	93 81       	ldd	r25, Z+3	; 0x03
 498:	0c 5f       	subi	r16, 0xFC	; 252
 49a:	1f 4f       	sbci	r17, 0xFF	; 255
 49c:	08 c0       	rjmp	.+16     	; 0x4ae <__stack+0x4f>
 49e:	60 81       	ld	r22, Z
 4a0:	71 81       	ldd	r23, Z+1	; 0x01
 4a2:	88 27       	eor	r24, r24
 4a4:	77 fd       	sbrc	r23, 7
 4a6:	80 95       	com	r24
 4a8:	98 2f       	mov	r25, r24
 4aa:	0e 5f       	subi	r16, 0xFE	; 254
 4ac:	1f 4f       	sbci	r17, 0xFF	; 255
 4ae:	2f 76       	andi	r18, 0x6F	; 111
 4b0:	b2 2e       	mov	r11, r18
 4b2:	97 ff       	sbrs	r25, 7
 4b4:	09 c0       	rjmp	.+18     	; 0x4c8 <__stack+0x69>
 4b6:	90 95       	com	r25
 4b8:	80 95       	com	r24
 4ba:	70 95       	com	r23
 4bc:	61 95       	neg	r22
 4be:	7f 4f       	sbci	r23, 0xFF	; 255
 4c0:	8f 4f       	sbci	r24, 0xFF	; 255
 4c2:	9f 4f       	sbci	r25, 0xFF	; 255
 4c4:	20 68       	ori	r18, 0x80	; 128
 4c6:	b2 2e       	mov	r11, r18
 4c8:	2a e0       	ldi	r18, 0x0A	; 10
 4ca:	30 e0       	ldi	r19, 0x00	; 0
 4cc:	a4 01       	movw	r20, r8
 4ce:	0e 94 82 03 	call	0x704	; 0x704 <__ultoa_invert>
 4d2:	a8 2e       	mov	r10, r24
 4d4:	a8 18       	sub	r10, r8
 4d6:	44 c0       	rjmp	.+136    	; 0x560 <__stack+0x101>
 4d8:	85 37       	cpi	r24, 0x75	; 117
 4da:	29 f4       	brne	.+10     	; 0x4e6 <__stack+0x87>
 4dc:	2f 7e       	andi	r18, 0xEF	; 239
 4de:	b2 2e       	mov	r11, r18
 4e0:	2a e0       	ldi	r18, 0x0A	; 10
 4e2:	30 e0       	ldi	r19, 0x00	; 0
 4e4:	25 c0       	rjmp	.+74     	; 0x530 <__stack+0xd1>
 4e6:	f2 2f       	mov	r31, r18
 4e8:	f9 7f       	andi	r31, 0xF9	; 249
 4ea:	bf 2e       	mov	r11, r31
 4ec:	8f 36       	cpi	r24, 0x6F	; 111
 4ee:	c1 f0       	breq	.+48     	; 0x520 <__stack+0xc1>
 4f0:	18 f4       	brcc	.+6      	; 0x4f8 <__stack+0x99>
 4f2:	88 35       	cpi	r24, 0x58	; 88
 4f4:	79 f0       	breq	.+30     	; 0x514 <__stack+0xb5>
 4f6:	b4 c0       	rjmp	.+360    	; 0x660 <__stack+0x201>
 4f8:	80 37       	cpi	r24, 0x70	; 112
 4fa:	19 f0       	breq	.+6      	; 0x502 <__stack+0xa3>
 4fc:	88 37       	cpi	r24, 0x78	; 120
 4fe:	21 f0       	breq	.+8      	; 0x508 <__stack+0xa9>
 500:	af c0       	rjmp	.+350    	; 0x660 <__stack+0x201>
 502:	2f 2f       	mov	r18, r31
 504:	20 61       	ori	r18, 0x10	; 16
 506:	b2 2e       	mov	r11, r18
 508:	b4 fe       	sbrs	r11, 4
 50a:	0d c0       	rjmp	.+26     	; 0x526 <__stack+0xc7>
 50c:	8b 2d       	mov	r24, r11
 50e:	84 60       	ori	r24, 0x04	; 4
 510:	b8 2e       	mov	r11, r24
 512:	09 c0       	rjmp	.+18     	; 0x526 <__stack+0xc7>
 514:	24 ff       	sbrs	r18, 4
 516:	0a c0       	rjmp	.+20     	; 0x52c <__stack+0xcd>
 518:	9f 2f       	mov	r25, r31
 51a:	96 60       	ori	r25, 0x06	; 6
 51c:	b9 2e       	mov	r11, r25
 51e:	06 c0       	rjmp	.+12     	; 0x52c <__stack+0xcd>
 520:	28 e0       	ldi	r18, 0x08	; 8
 522:	30 e0       	ldi	r19, 0x00	; 0
 524:	05 c0       	rjmp	.+10     	; 0x530 <__stack+0xd1>
 526:	20 e1       	ldi	r18, 0x10	; 16
 528:	30 e0       	ldi	r19, 0x00	; 0
 52a:	02 c0       	rjmp	.+4      	; 0x530 <__stack+0xd1>
 52c:	20 e1       	ldi	r18, 0x10	; 16
 52e:	32 e0       	ldi	r19, 0x02	; 2
 530:	f8 01       	movw	r30, r16
 532:	b7 fe       	sbrs	r11, 7
 534:	07 c0       	rjmp	.+14     	; 0x544 <__stack+0xe5>
 536:	60 81       	ld	r22, Z
 538:	71 81       	ldd	r23, Z+1	; 0x01
 53a:	82 81       	ldd	r24, Z+2	; 0x02
 53c:	93 81       	ldd	r25, Z+3	; 0x03
 53e:	0c 5f       	subi	r16, 0xFC	; 252
 540:	1f 4f       	sbci	r17, 0xFF	; 255
 542:	06 c0       	rjmp	.+12     	; 0x550 <__stack+0xf1>
 544:	60 81       	ld	r22, Z
 546:	71 81       	ldd	r23, Z+1	; 0x01
 548:	80 e0       	ldi	r24, 0x00	; 0
 54a:	90 e0       	ldi	r25, 0x00	; 0
 54c:	0e 5f       	subi	r16, 0xFE	; 254
 54e:	1f 4f       	sbci	r17, 0xFF	; 255
 550:	a4 01       	movw	r20, r8
 552:	0e 94 82 03 	call	0x704	; 0x704 <__ultoa_invert>
 556:	a8 2e       	mov	r10, r24
 558:	a8 18       	sub	r10, r8
 55a:	fb 2d       	mov	r31, r11
 55c:	ff 77       	andi	r31, 0x7F	; 127
 55e:	bf 2e       	mov	r11, r31
 560:	b6 fe       	sbrs	r11, 6
 562:	0b c0       	rjmp	.+22     	; 0x57a <__stack+0x11b>
 564:	2b 2d       	mov	r18, r11
 566:	2e 7f       	andi	r18, 0xFE	; 254
 568:	a5 14       	cp	r10, r5
 56a:	50 f4       	brcc	.+20     	; 0x580 <__stack+0x121>
 56c:	b4 fe       	sbrs	r11, 4
 56e:	0a c0       	rjmp	.+20     	; 0x584 <__stack+0x125>
 570:	b2 fc       	sbrc	r11, 2
 572:	08 c0       	rjmp	.+16     	; 0x584 <__stack+0x125>
 574:	2b 2d       	mov	r18, r11
 576:	2e 7e       	andi	r18, 0xEE	; 238
 578:	05 c0       	rjmp	.+10     	; 0x584 <__stack+0x125>
 57a:	7a 2c       	mov	r7, r10
 57c:	2b 2d       	mov	r18, r11
 57e:	03 c0       	rjmp	.+6      	; 0x586 <__stack+0x127>
 580:	7a 2c       	mov	r7, r10
 582:	01 c0       	rjmp	.+2      	; 0x586 <__stack+0x127>
 584:	75 2c       	mov	r7, r5
 586:	24 ff       	sbrs	r18, 4
 588:	0d c0       	rjmp	.+26     	; 0x5a4 <__stack+0x145>
 58a:	fe 01       	movw	r30, r28
 58c:	ea 0d       	add	r30, r10
 58e:	f1 1d       	adc	r31, r1
 590:	80 81       	ld	r24, Z
 592:	80 33       	cpi	r24, 0x30	; 48
 594:	11 f4       	brne	.+4      	; 0x59a <__stack+0x13b>
 596:	29 7e       	andi	r18, 0xE9	; 233
 598:	09 c0       	rjmp	.+18     	; 0x5ac <__stack+0x14d>
 59a:	22 ff       	sbrs	r18, 2
 59c:	06 c0       	rjmp	.+12     	; 0x5aa <__stack+0x14b>
 59e:	73 94       	inc	r7
 5a0:	73 94       	inc	r7
 5a2:	04 c0       	rjmp	.+8      	; 0x5ac <__stack+0x14d>
 5a4:	82 2f       	mov	r24, r18
 5a6:	86 78       	andi	r24, 0x86	; 134
 5a8:	09 f0       	breq	.+2      	; 0x5ac <__stack+0x14d>
 5aa:	73 94       	inc	r7
 5ac:	23 fd       	sbrc	r18, 3
 5ae:	13 c0       	rjmp	.+38     	; 0x5d6 <__stack+0x177>
 5b0:	20 ff       	sbrs	r18, 0
 5b2:	06 c0       	rjmp	.+12     	; 0x5c0 <__stack+0x161>
 5b4:	5a 2c       	mov	r5, r10
 5b6:	73 14       	cp	r7, r3
 5b8:	18 f4       	brcc	.+6      	; 0x5c0 <__stack+0x161>
 5ba:	53 0c       	add	r5, r3
 5bc:	57 18       	sub	r5, r7
 5be:	73 2c       	mov	r7, r3
 5c0:	73 14       	cp	r7, r3
 5c2:	68 f4       	brcc	.+26     	; 0x5de <__stack+0x17f>
 5c4:	b7 01       	movw	r22, r14
 5c6:	80 e2       	ldi	r24, 0x20	; 32
 5c8:	90 e0       	ldi	r25, 0x00	; 0
 5ca:	2c 87       	std	Y+12, r18	; 0x0c
 5cc:	0e 94 50 03 	call	0x6a0	; 0x6a0 <fputc>
 5d0:	73 94       	inc	r7
 5d2:	2c 85       	ldd	r18, Y+12	; 0x0c
 5d4:	f5 cf       	rjmp	.-22     	; 0x5c0 <__stack+0x161>
 5d6:	73 14       	cp	r7, r3
 5d8:	10 f4       	brcc	.+4      	; 0x5de <__stack+0x17f>
 5da:	37 18       	sub	r3, r7
 5dc:	01 c0       	rjmp	.+2      	; 0x5e0 <__stack+0x181>
 5de:	31 2c       	mov	r3, r1
 5e0:	24 ff       	sbrs	r18, 4
 5e2:	12 c0       	rjmp	.+36     	; 0x608 <__stack+0x1a9>
 5e4:	b7 01       	movw	r22, r14
 5e6:	80 e3       	ldi	r24, 0x30	; 48
 5e8:	90 e0       	ldi	r25, 0x00	; 0
 5ea:	2c 87       	std	Y+12, r18	; 0x0c
 5ec:	0e 94 50 03 	call	0x6a0	; 0x6a0 <fputc>
 5f0:	2c 85       	ldd	r18, Y+12	; 0x0c
 5f2:	22 ff       	sbrs	r18, 2
 5f4:	17 c0       	rjmp	.+46     	; 0x624 <__stack+0x1c5>
 5f6:	21 ff       	sbrs	r18, 1
 5f8:	03 c0       	rjmp	.+6      	; 0x600 <__stack+0x1a1>
 5fa:	88 e5       	ldi	r24, 0x58	; 88
 5fc:	90 e0       	ldi	r25, 0x00	; 0
 5fe:	02 c0       	rjmp	.+4      	; 0x604 <__stack+0x1a5>
 600:	88 e7       	ldi	r24, 0x78	; 120
 602:	90 e0       	ldi	r25, 0x00	; 0
 604:	b7 01       	movw	r22, r14
 606:	0c c0       	rjmp	.+24     	; 0x620 <__stack+0x1c1>
 608:	82 2f       	mov	r24, r18
 60a:	86 78       	andi	r24, 0x86	; 134
 60c:	59 f0       	breq	.+22     	; 0x624 <__stack+0x1c5>
 60e:	21 fd       	sbrc	r18, 1
 610:	02 c0       	rjmp	.+4      	; 0x616 <__stack+0x1b7>
 612:	80 e2       	ldi	r24, 0x20	; 32
 614:	01 c0       	rjmp	.+2      	; 0x618 <__stack+0x1b9>
 616:	8b e2       	ldi	r24, 0x2B	; 43
 618:	27 fd       	sbrc	r18, 7
 61a:	8d e2       	ldi	r24, 0x2D	; 45
 61c:	b7 01       	movw	r22, r14
 61e:	90 e0       	ldi	r25, 0x00	; 0
 620:	0e 94 50 03 	call	0x6a0	; 0x6a0 <fputc>
 624:	a5 14       	cp	r10, r5
 626:	38 f4       	brcc	.+14     	; 0x636 <__stack+0x1d7>
 628:	b7 01       	movw	r22, r14
 62a:	80 e3       	ldi	r24, 0x30	; 48
 62c:	90 e0       	ldi	r25, 0x00	; 0
 62e:	0e 94 50 03 	call	0x6a0	; 0x6a0 <fputc>
 632:	5a 94       	dec	r5
 634:	f7 cf       	rjmp	.-18     	; 0x624 <__stack+0x1c5>
 636:	aa 94       	dec	r10
 638:	f4 01       	movw	r30, r8
 63a:	ea 0d       	add	r30, r10
 63c:	f1 1d       	adc	r31, r1
 63e:	80 81       	ld	r24, Z
 640:	b7 01       	movw	r22, r14
 642:	90 e0       	ldi	r25, 0x00	; 0
 644:	0e 94 50 03 	call	0x6a0	; 0x6a0 <fputc>
 648:	a1 10       	cpse	r10, r1
 64a:	f5 cf       	rjmp	.-22     	; 0x636 <__stack+0x1d7>
 64c:	33 20       	and	r3, r3
 64e:	09 f4       	brne	.+2      	; 0x652 <__stack+0x1f3>
 650:	51 ce       	rjmp	.-862    	; 0x2f4 <vfprintf+0x24>
 652:	b7 01       	movw	r22, r14
 654:	80 e2       	ldi	r24, 0x20	; 32
 656:	90 e0       	ldi	r25, 0x00	; 0
 658:	0e 94 50 03 	call	0x6a0	; 0x6a0 <fputc>
 65c:	3a 94       	dec	r3
 65e:	f6 cf       	rjmp	.-20     	; 0x64c <__stack+0x1ed>
 660:	f7 01       	movw	r30, r14
 662:	86 81       	ldd	r24, Z+6	; 0x06
 664:	97 81       	ldd	r25, Z+7	; 0x07
 666:	02 c0       	rjmp	.+4      	; 0x66c <__stack+0x20d>
 668:	8f ef       	ldi	r24, 0xFF	; 255
 66a:	9f ef       	ldi	r25, 0xFF	; 255
 66c:	2c 96       	adiw	r28, 0x0c	; 12
 66e:	e2 e1       	ldi	r30, 0x12	; 18
 670:	0c 94 fc 03 	jmp	0x7f8	; 0x7f8 <__epilogue_restores__>

00000674 <strnlen_P>:
 674:	fc 01       	movw	r30, r24
 676:	05 90       	lpm	r0, Z+
 678:	61 50       	subi	r22, 0x01	; 1
 67a:	70 40       	sbci	r23, 0x00	; 0
 67c:	01 10       	cpse	r0, r1
 67e:	d8 f7       	brcc	.-10     	; 0x676 <strnlen_P+0x2>
 680:	80 95       	com	r24
 682:	90 95       	com	r25
 684:	8e 0f       	add	r24, r30
 686:	9f 1f       	adc	r25, r31
 688:	08 95       	ret

0000068a <strnlen>:
 68a:	fc 01       	movw	r30, r24
 68c:	61 50       	subi	r22, 0x01	; 1
 68e:	70 40       	sbci	r23, 0x00	; 0
 690:	01 90       	ld	r0, Z+
 692:	01 10       	cpse	r0, r1
 694:	d8 f7       	brcc	.-10     	; 0x68c <strnlen+0x2>
 696:	80 95       	com	r24
 698:	90 95       	com	r25
 69a:	8e 0f       	add	r24, r30
 69c:	9f 1f       	adc	r25, r31
 69e:	08 95       	ret

000006a0 <fputc>:
 6a0:	0f 93       	push	r16
 6a2:	1f 93       	push	r17
 6a4:	cf 93       	push	r28
 6a6:	df 93       	push	r29
 6a8:	18 2f       	mov	r17, r24
 6aa:	09 2f       	mov	r16, r25
 6ac:	eb 01       	movw	r28, r22
 6ae:	8b 81       	ldd	r24, Y+3	; 0x03
 6b0:	81 fd       	sbrc	r24, 1
 6b2:	03 c0       	rjmp	.+6      	; 0x6ba <fputc+0x1a>
 6b4:	8f ef       	ldi	r24, 0xFF	; 255
 6b6:	9f ef       	ldi	r25, 0xFF	; 255
 6b8:	20 c0       	rjmp	.+64     	; 0x6fa <fputc+0x5a>
 6ba:	82 ff       	sbrs	r24, 2
 6bc:	10 c0       	rjmp	.+32     	; 0x6de <fputc+0x3e>
 6be:	4e 81       	ldd	r20, Y+6	; 0x06
 6c0:	5f 81       	ldd	r21, Y+7	; 0x07
 6c2:	2c 81       	ldd	r18, Y+4	; 0x04
 6c4:	3d 81       	ldd	r19, Y+5	; 0x05
 6c6:	42 17       	cp	r20, r18
 6c8:	53 07       	cpc	r21, r19
 6ca:	7c f4       	brge	.+30     	; 0x6ea <fputc+0x4a>
 6cc:	e8 81       	ld	r30, Y
 6ce:	f9 81       	ldd	r31, Y+1	; 0x01
 6d0:	9f 01       	movw	r18, r30
 6d2:	2f 5f       	subi	r18, 0xFF	; 255
 6d4:	3f 4f       	sbci	r19, 0xFF	; 255
 6d6:	39 83       	std	Y+1, r19	; 0x01
 6d8:	28 83       	st	Y, r18
 6da:	10 83       	st	Z, r17
 6dc:	06 c0       	rjmp	.+12     	; 0x6ea <fputc+0x4a>
 6de:	e8 85       	ldd	r30, Y+8	; 0x08
 6e0:	f9 85       	ldd	r31, Y+9	; 0x09
 6e2:	81 2f       	mov	r24, r17
 6e4:	09 95       	icall
 6e6:	89 2b       	or	r24, r25
 6e8:	29 f7       	brne	.-54     	; 0x6b4 <fputc+0x14>
 6ea:	2e 81       	ldd	r18, Y+6	; 0x06
 6ec:	3f 81       	ldd	r19, Y+7	; 0x07
 6ee:	2f 5f       	subi	r18, 0xFF	; 255
 6f0:	3f 4f       	sbci	r19, 0xFF	; 255
 6f2:	3f 83       	std	Y+7, r19	; 0x07
 6f4:	2e 83       	std	Y+6, r18	; 0x06
 6f6:	81 2f       	mov	r24, r17
 6f8:	90 2f       	mov	r25, r16
 6fa:	df 91       	pop	r29
 6fc:	cf 91       	pop	r28
 6fe:	1f 91       	pop	r17
 700:	0f 91       	pop	r16
 702:	08 95       	ret

00000704 <__ultoa_invert>:
 704:	fa 01       	movw	r30, r20
 706:	aa 27       	eor	r26, r26
 708:	28 30       	cpi	r18, 0x08	; 8
 70a:	51 f1       	breq	.+84     	; 0x760 <__ultoa_invert+0x5c>
 70c:	20 31       	cpi	r18, 0x10	; 16
 70e:	81 f1       	breq	.+96     	; 0x770 <__ultoa_invert+0x6c>
 710:	e8 94       	clt
 712:	6f 93       	push	r22
 714:	6e 7f       	andi	r22, 0xFE	; 254
 716:	6e 5f       	subi	r22, 0xFE	; 254
 718:	7f 4f       	sbci	r23, 0xFF	; 255
 71a:	8f 4f       	sbci	r24, 0xFF	; 255
 71c:	9f 4f       	sbci	r25, 0xFF	; 255
 71e:	af 4f       	sbci	r26, 0xFF	; 255
 720:	b1 e0       	ldi	r27, 0x01	; 1
 722:	3e d0       	rcall	.+124    	; 0x7a0 <__ultoa_invert+0x9c>
 724:	b4 e0       	ldi	r27, 0x04	; 4
 726:	3c d0       	rcall	.+120    	; 0x7a0 <__ultoa_invert+0x9c>
 728:	67 0f       	add	r22, r23
 72a:	78 1f       	adc	r23, r24
 72c:	89 1f       	adc	r24, r25
 72e:	9a 1f       	adc	r25, r26
 730:	a1 1d       	adc	r26, r1
 732:	68 0f       	add	r22, r24
 734:	79 1f       	adc	r23, r25
 736:	8a 1f       	adc	r24, r26
 738:	91 1d       	adc	r25, r1
 73a:	a1 1d       	adc	r26, r1
 73c:	6a 0f       	add	r22, r26
 73e:	71 1d       	adc	r23, r1
 740:	81 1d       	adc	r24, r1
 742:	91 1d       	adc	r25, r1
 744:	a1 1d       	adc	r26, r1
 746:	20 d0       	rcall	.+64     	; 0x788 <__ultoa_invert+0x84>
 748:	09 f4       	brne	.+2      	; 0x74c <__ultoa_invert+0x48>
 74a:	68 94       	set
 74c:	3f 91       	pop	r19
 74e:	2a e0       	ldi	r18, 0x0A	; 10
 750:	26 9f       	mul	r18, r22
 752:	11 24       	eor	r1, r1
 754:	30 19       	sub	r19, r0
 756:	30 5d       	subi	r19, 0xD0	; 208
 758:	31 93       	st	Z+, r19
 75a:	de f6       	brtc	.-74     	; 0x712 <__ultoa_invert+0xe>
 75c:	cf 01       	movw	r24, r30
 75e:	08 95       	ret
 760:	46 2f       	mov	r20, r22
 762:	47 70       	andi	r20, 0x07	; 7
 764:	40 5d       	subi	r20, 0xD0	; 208
 766:	41 93       	st	Z+, r20
 768:	b3 e0       	ldi	r27, 0x03	; 3
 76a:	0f d0       	rcall	.+30     	; 0x78a <__ultoa_invert+0x86>
 76c:	c9 f7       	brne	.-14     	; 0x760 <__ultoa_invert+0x5c>
 76e:	f6 cf       	rjmp	.-20     	; 0x75c <__ultoa_invert+0x58>
 770:	46 2f       	mov	r20, r22
 772:	4f 70       	andi	r20, 0x0F	; 15
 774:	40 5d       	subi	r20, 0xD0	; 208
 776:	4a 33       	cpi	r20, 0x3A	; 58
 778:	18 f0       	brcs	.+6      	; 0x780 <__ultoa_invert+0x7c>
 77a:	49 5d       	subi	r20, 0xD9	; 217
 77c:	31 fd       	sbrc	r19, 1
 77e:	40 52       	subi	r20, 0x20	; 32
 780:	41 93       	st	Z+, r20
 782:	02 d0       	rcall	.+4      	; 0x788 <__ultoa_invert+0x84>
 784:	a9 f7       	brne	.-22     	; 0x770 <__ultoa_invert+0x6c>
 786:	ea cf       	rjmp	.-44     	; 0x75c <__ultoa_invert+0x58>
 788:	b4 e0       	ldi	r27, 0x04	; 4
 78a:	a6 95       	lsr	r26
 78c:	97 95       	ror	r25
 78e:	87 95       	ror	r24
 790:	77 95       	ror	r23
 792:	67 95       	ror	r22
 794:	ba 95       	dec	r27
 796:	c9 f7       	brne	.-14     	; 0x78a <__ultoa_invert+0x86>
 798:	00 97       	sbiw	r24, 0x00	; 0
 79a:	61 05       	cpc	r22, r1
 79c:	71 05       	cpc	r23, r1
 79e:	08 95       	ret
 7a0:	9b 01       	movw	r18, r22
 7a2:	ac 01       	movw	r20, r24
 7a4:	0a 2e       	mov	r0, r26
 7a6:	06 94       	lsr	r0
 7a8:	57 95       	ror	r21
 7aa:	47 95       	ror	r20
 7ac:	37 95       	ror	r19
 7ae:	27 95       	ror	r18
 7b0:	ba 95       	dec	r27
 7b2:	c9 f7       	brne	.-14     	; 0x7a6 <__ultoa_invert+0xa2>
 7b4:	62 0f       	add	r22, r18
 7b6:	73 1f       	adc	r23, r19
 7b8:	84 1f       	adc	r24, r20
 7ba:	95 1f       	adc	r25, r21
 7bc:	a0 1d       	adc	r26, r0
 7be:	08 95       	ret

000007c0 <__prologue_saves__>:
 7c0:	2f 92       	push	r2
 7c2:	3f 92       	push	r3
 7c4:	4f 92       	push	r4
 7c6:	5f 92       	push	r5
 7c8:	6f 92       	push	r6
 7ca:	7f 92       	push	r7
 7cc:	8f 92       	push	r8
 7ce:	9f 92       	push	r9
 7d0:	af 92       	push	r10
 7d2:	bf 92       	push	r11
 7d4:	cf 92       	push	r12
 7d6:	df 92       	push	r13
 7d8:	ef 92       	push	r14
 7da:	ff 92       	push	r15
 7dc:	0f 93       	push	r16
 7de:	1f 93       	push	r17
 7e0:	cf 93       	push	r28
 7e2:	df 93       	push	r29
 7e4:	cd b7       	in	r28, 0x3d	; 61
 7e6:	de b7       	in	r29, 0x3e	; 62
 7e8:	ca 1b       	sub	r28, r26
 7ea:	db 0b       	sbc	r29, r27
 7ec:	0f b6       	in	r0, 0x3f	; 63
 7ee:	f8 94       	cli
 7f0:	de bf       	out	0x3e, r29	; 62
 7f2:	0f be       	out	0x3f, r0	; 63
 7f4:	cd bf       	out	0x3d, r28	; 61
 7f6:	09 94       	ijmp

000007f8 <__epilogue_restores__>:
 7f8:	2a 88       	ldd	r2, Y+18	; 0x12
 7fa:	39 88       	ldd	r3, Y+17	; 0x11
 7fc:	48 88       	ldd	r4, Y+16	; 0x10
 7fe:	5f 84       	ldd	r5, Y+15	; 0x0f
 800:	6e 84       	ldd	r6, Y+14	; 0x0e
 802:	7d 84       	ldd	r7, Y+13	; 0x0d
 804:	8c 84       	ldd	r8, Y+12	; 0x0c
 806:	9b 84       	ldd	r9, Y+11	; 0x0b
 808:	aa 84       	ldd	r10, Y+10	; 0x0a
 80a:	b9 84       	ldd	r11, Y+9	; 0x09
 80c:	c8 84       	ldd	r12, Y+8	; 0x08
 80e:	df 80       	ldd	r13, Y+7	; 0x07
 810:	ee 80       	ldd	r14, Y+6	; 0x06
 812:	fd 80       	ldd	r15, Y+5	; 0x05
 814:	0c 81       	ldd	r16, Y+4	; 0x04
 816:	1b 81       	ldd	r17, Y+3	; 0x03
 818:	aa 81       	ldd	r26, Y+2	; 0x02
 81a:	b9 81       	ldd	r27, Y+1	; 0x01
 81c:	ce 0f       	add	r28, r30
 81e:	d1 1d       	adc	r29, r1
 820:	0f b6       	in	r0, 0x3f	; 63
 822:	f8 94       	cli
 824:	de bf       	out	0x3e, r29	; 62
 826:	0f be       	out	0x3f, r0	; 63
 828:	cd bf       	out	0x3d, r28	; 61
 82a:	ed 01       	movw	r28, r26
 82c:	08 95       	ret

0000082e <_exit>:
 82e:	f8 94       	cli

00000830 <__stop_program>:
 830:	ff cf       	rjmp	.-2      	; 0x830 <__stop_program>
